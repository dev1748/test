# proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=5m use_temp_path=off;
# proxy_cache_bypass $cookie_nocache $arg_nocache$arg_comment;
# proxy_no_cache $http_pragma $http_authorization;


# upstream frontend_upstream {
#     server frontend:3000;
# }

server {
    listen 80 default_server;

    server_name _;
    server_tokens off;

    proxy_http_version 1.1;
    # proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection 'upgrade';
    # proxy_set_header Host $host;
    # proxy_cache_bypass $http_upgrade;

    location / {
        include /etc/nginx/mime.types;
        proxy_pass http://frontend:3000;
    }

    location /api/tasks {
        # GET requests → Search/List service
        if ($request_method = GET) {
            proxy_pass http://search-api:7000;
            break;
        }

        # POST/PUT/DELETE → CRUD service
        proxy_pass http://tasks-api:8000/task;
        proxy_pass_request_headers on;
    }

    location /api/users {
        proxy_pass http://89.169.146.136:8081/users;
        proxy_pass_request_headers on;
    }
}